name: Auto build

on:
  push:
    branches:
     - master
  schedule:
    - cron: '0 12 5 * *'

env:
  DEFAULT_IP: 192.168.2.1
  OUTPUT_PATH: lede/bin/targets/rockchip/armv8/

jobs:
  build:
    name: Build firmware
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: update submodules
        run: |
          git submodule update --remote --recursive --merge

      - name: install dependencies
        run: |
          sudo apt update -y
          sudo apt full-upgrade -y
          sudo apt install -y ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential \
            bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
            git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
            libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
            mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils \
            rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev

      - name: change default ip
        run: |
          sed  -i 's#lan) ipad=${ipaddr:-"192.168.1.1"}#lan) ipad=${ipaddr:-"${{ env.DEFAULT_IP }}"}#g'  lede/package/base-files/files/bin/config_generate

      - name: copy files
        run: |
          cp -r OpenClash/luci-app-openclash/ lede/package/lean/luci-app-openclash/
          cp -r luci-app-argon-config lede/package/lean/luci-app-argon-config
          cp -r luci-theme-argon/ lede/package/lean/luci-theme-argon-18.06
          cp -r openwrt-subconverter/. lede/package/lean
          cd lede/
          sed -i '/uci commit luci/i\uci set luci.main.mediaurlbase="/luci-static/argon"' `find package -type f -path '*/default-settings/files/zzz-default-settings'`

      - name: feeds update and install
        run: |
          cd lede/
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: make defconfig
        run: |
          cp -f .config lede/.config
          cd lede/
          make defconfig

      - name: make download
        run: |
          cd lede/
          make download -j8
      
      - name: build
        run: |
          cd lede/
          make V=s -j1

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: firmware
          path: ${{ env.OUTPUT_PATH }}
